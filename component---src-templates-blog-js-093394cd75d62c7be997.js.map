{"version":3,"sources":["webpack:///component---src-templates-blog-js-093394cd75d62c7be997.js","webpack:///./src/templates/blog.js"],"names":["webpackJsonp","170","module","exports","__webpack_require__","Glamor","_interopRequireDefault","obj","__esModule","default","pageQuery","undefined","_propTypes","_propTypes2","_react","_MarkdownPage","_MarkdownPage2","_createLink","toSectionList","allMarkdownRemark","title","items","edges","map","_ref","node","id","fields","slug","frontmatter","concat","Blog","_ref2","data","location","createElement","authors","markdownRemark","author","createLink","createLinkBlog","date","ogDescription","excerpt","sectionList","titlePostfix","propTypes","object","isRequired","call"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,EAASC,IAEJ,SAASC,GAAS,YAmB9C,SAASC,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GAjBvFJ,EAAQK,YAAa,EACrBL,EAAQO,UAAYC,MCFrB,IAAAC,GAAAR,EAAA,GDMKS,EAAcP,EAAuBM,GCL1CE,EAAAV,EAAA,GACAW,GDQeT,EAAuBQ,GCRtCV,EAAA,KDYKY,EAAiBV,EAAuBS,GCX7CE,EAAAb,EAAA,IAEMc,EAAgB,SAAAC,GAAA,QAElBC,MAAO,eACPC,MAAOF,EAAkBG,MACtBC,IAAI,SAAAC,GAAA,GAAEC,GAAFD,EAAEC,IAAF,QACHC,GAAID,EAAKE,OAAOC,KAChBR,MAAOK,EAAKI,YAAYT,SAEzBU,QACCJ,GAAI,iBACJN,MAAO,qBAKTW,EAAO,SAAAC,GAAA,GAAEC,GAAFD,EAAEC,KAAMC,EAARF,EAAQE,QAAR,OACX7B,GAAA8B,cAAAnB,EAAAP,SACE2B,QAASH,EAAKI,eAAeR,YAAYS,OACzCC,WAAAtB,EAAAuB,eACAC,KAAMR,EAAKI,eAAeV,OAAOc,KACjCP,SAAUA,EACVQ,cAAeT,EAAKI,eAAeM,QACnCN,eAAgBJ,EAAKI,eACrBO,YAAa1B,EAAce,EAAKd,mBAChC0B,aAAa,kBAIjBd,GAAKe,WACHb,KAAMpB,EAAAJ,QAAUsC,OAAOC,WAIZtC,+CD0BZP,GAAQM,QCeMsB,IDdekB,KAAK9C,EAASC,EAAoB","file":"component---src-templates-blog-js-093394cd75d62c7be997.js","sourcesContent":["webpackJsonp([36733297554888],{\n\n/***/ 170:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(Glamor) {'use strict';\n\t\n\texports.__esModule = true;\n\texports.pageQuery = undefined;\n\t\n\tvar _propTypes = __webpack_require__(5);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _MarkdownPage = __webpack_require__(35);\n\t\n\tvar _MarkdownPage2 = _interopRequireDefault(_MarkdownPage);\n\t\n\tvar _createLink = __webpack_require__(23);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t *\n\t * @emails react-core\n\t */\n\t\n\tvar toSectionList = function toSectionList(allMarkdownRemark) {\n\t  return [{\n\t    title: 'Recent Posts',\n\t    items: allMarkdownRemark.edges.map(function (_ref) {\n\t      var node = _ref.node;\n\t      return {\n\t        id: node.fields.slug,\n\t        title: node.frontmatter.title\n\t      };\n\t    }).concat({\n\t      id: '/blog/all.html',\n\t      title: 'All posts ...'\n\t    })\n\t  }];\n\t};\n\t\n\tvar Blog = function Blog(_ref2) {\n\t  var data = _ref2.data,\n\t      location = _ref2.location;\n\t  return Glamor.createElement(_MarkdownPage2.default, {\n\t    authors: data.markdownRemark.frontmatter.author,\n\t    createLink: _createLink.createLinkBlog,\n\t    date: data.markdownRemark.fields.date,\n\t    location: location,\n\t    ogDescription: data.markdownRemark.excerpt,\n\t    markdownRemark: data.markdownRemark,\n\t    sectionList: toSectionList(data.allMarkdownRemark),\n\t    titlePostfix: ' - React Blog'\n\t  });\n\t};\n\t\n\tBlog.propTypes = {\n\t  data: _propTypes2.default.object.isRequired\n\t};\n\t\n\t// eslint-disable-next-line no-undef\n\tvar pageQuery = exports.pageQuery = '** extracted graphql fragment **';\n\t\n\texports.default = Blog;\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// component---src-templates-blog-js-093394cd75d62c7be997.js","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * @emails react-core\n */\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport MarkdownPage from 'components/MarkdownPage';\nimport {createLinkBlog} from 'utils/createLink';\n\nconst toSectionList = allMarkdownRemark => [\n  {\n    title: 'Recent Posts',\n    items: allMarkdownRemark.edges\n      .map(({node}) => ({\n        id: node.fields.slug,\n        title: node.frontmatter.title,\n      }))\n      .concat({\n        id: '/blog/all.html',\n        title: 'All posts ...',\n      }),\n  },\n];\n\nconst Blog = ({data, location}) => (\n  <MarkdownPage\n    authors={data.markdownRemark.frontmatter.author}\n    createLink={createLinkBlog}\n    date={data.markdownRemark.fields.date}\n    location={location}\n    ogDescription={data.markdownRemark.excerpt}\n    markdownRemark={data.markdownRemark}\n    sectionList={toSectionList(data.allMarkdownRemark)}\n    titlePostfix=\" - React Blog\"\n  />\n);\n\nBlog.propTypes = {\n  data: PropTypes.object.isRequired,\n};\n\n// eslint-disable-next-line no-undef\nexport const pageQuery = graphql`\n  query TemplateBlogMarkdown($slug: String!) {\n    markdownRemark(fields: {slug: {eq: $slug}}) {\n      html\n      excerpt(pruneLength: 500)\n      frontmatter {\n        title\n        next\n        prev\n        author {\n          frontmatter {\n            name\n            url\n          }\n        }\n      }\n      fields {\n        date(formatString: \"MMMM DD, YYYY\")\n        path\n        slug\n      }\n    }\n    allMarkdownRemark(\n      limit: 10\n      filter: {id: {regex: \"/blog/\"}}\n      sort: {fields: [fields___date], order: DESC}\n    ) {\n      edges {\n        node {\n          frontmatter {\n            title\n          }\n          fields {\n            slug\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default Blog;\n\n\n\n// WEBPACK FOOTER //\n// ./src/templates/blog.js"],"sourceRoot":""}