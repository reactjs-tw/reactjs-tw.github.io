{"version":3,"sources":["webpack:///path---warnings-invalid-aria-prop-html-d278ce30785e5be710f5.js","webpack:///./.cache/json/warnings-invalid-aria-prop-html.json"],"names":["webpackJsonp","938","module","exports","data","markdownRemark","html","frontmatter","title","next","prev","fields","path","slug","pathContext"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA,6yBAAAC,aAAy0BC,MAAA,4BAAAC,KAAA,KAAAC,KAAA,MAA4DC,QAAWC,KAAA,gCAAAC,KAAA,qCAAkFC,aAAgBD,KAAA","file":"path---warnings-invalid-aria-prop-html-d278ce30785e5be710f5.js","sourcesContent":["webpackJsonp([98402527300606],{\n\n/***/ 938:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p>The invalid-aria-prop warning will fire if you attempt to render a DOM element with an aria-* prop that does not exist in the Web Accessibility Initiative (WAI) Accessible Rich Internet Application (ARIA) <a href=\\\"https://www.w3.org/TR/wai-aria-1.1/#states_and_properties\\\">specification</a>.</p>\\n<ol>\\n<li>\\n<p>If you feel that you are using a valid prop, check the spelling carefully. <code class=\\\"gatsby-code-text\\\">aria-labelledby</code> and <code class=\\\"gatsby-code-text\\\">aria-activedescendant</code> are often misspelled.</p>\\n</li>\\n<li>\\n<p>React does not yet recognize the attribute you specified. This will likely be fixed in a future version of React. However, React currently strips all unknown attributes, so specifying them in your React app will not cause them to be rendered</p>\\n</li>\\n</ol>\",\"frontmatter\":{\"title\":\"Invalid ARIA Prop Warning\",\"next\":null,\"prev\":null},\"fields\":{\"path\":\"warnings/invalid-aria-prop.md\",\"slug\":\"warnings/invalid-aria-prop.html\"}}},\"pathContext\":{\"slug\":\"warnings/invalid-aria-prop.html\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---warnings-invalid-aria-prop-html-d278ce30785e5be710f5.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p>The invalid-aria-prop warning will fire if you attempt to render a DOM element with an aria-* prop that does not exist in the Web Accessibility Initiative (WAI) Accessible Rich Internet Application (ARIA) <a href=\\\"https://www.w3.org/TR/wai-aria-1.1/#states_and_properties\\\">specification</a>.</p>\\n<ol>\\n<li>\\n<p>If you feel that you are using a valid prop, check the spelling carefully. <code class=\\\"gatsby-code-text\\\">aria-labelledby</code> and <code class=\\\"gatsby-code-text\\\">aria-activedescendant</code> are often misspelled.</p>\\n</li>\\n<li>\\n<p>React does not yet recognize the attribute you specified. This will likely be fixed in a future version of React. However, React currently strips all unknown attributes, so specifying them in your React app will not cause them to be rendered</p>\\n</li>\\n</ol>\",\"frontmatter\":{\"title\":\"Invalid ARIA Prop Warning\",\"next\":null,\"prev\":null},\"fields\":{\"path\":\"warnings/invalid-aria-prop.md\",\"slug\":\"warnings/invalid-aria-prop.html\"}}},\"pathContext\":{\"slug\":\"warnings/invalid-aria-prop.html\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/warnings-invalid-aria-prop-html.json\n// module id = 938\n// module chunks = 98402527300606"],"sourceRoot":""}