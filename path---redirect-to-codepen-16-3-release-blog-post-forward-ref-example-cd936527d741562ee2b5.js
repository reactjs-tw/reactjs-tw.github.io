webpackJsonp([0x82794583d591],{873:function(e,n){e.exports={pathContext:{action:"https://codepen.io/pen/define",payload:'{"editors":"0010","html":"<div id=\\"root\\"></div>","js":"function withTheme(Component) {\\n  // Note the second param \\"ref\\" provided by React.forwardRef.\\n  // We can attach this to Component directly.\\n  // highlight-range{1,5}\\n  function ThemedComponent(props, ref) {\\n    return (\\n      <ThemeContext.Consumer>\\n        {theme => (\\n          <Component {...props} ref={ref} theme={theme} />\\n        )}\\n      </ThemeContext.Consumer>\\n    );\\n  }\\n\\n  // These next lines are not necessary,\\n  // But they do give the component a better display name in DevTools,\\n  // e.g. \\"ForwardRef(withTheme(MyComponent))\\"\\n  // highlight-range{1-2}\\n  const name = Component.displayName || Component.name;\\n  ThemedComponent.displayName = `withTheme(${name})`;\\n\\n  // Tell React to pass the \\"ref\\" to ThemedComponent.\\n  // highlight-next-line\\n  return React.forwardRef(ThemedComponent);\\n}\\n\\n// highlight-next-line\\nconst fancyButtonRef = React.createRef();\\n\\n// fancyButtonRef will now point to FancyButton\\n// highlight-range{4}\\n<FancyThemedButton\\n  label=\\"Click me!\\"\\n  onClick={handleClick}\\n  ref={fancyButtonRef}\\n/>;\\n","js_external":"//unpkg.com/react/umd/react.development.js;//unpkg.com/react-dom/umd/react-dom.development.js","js_pre_processor":"babel","layout":"left"}'}}}});
//# sourceMappingURL=path---redirect-to-codepen-16-3-release-blog-post-forward-ref-example-cd936527d741562ee2b5.js.map